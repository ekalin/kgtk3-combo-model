#!/usr/bin/perl
use strict;
use warnings;

use Gtk3 -init;
use KGtk3::ComboModel;


sub create_model {
  my $model = Gtk3::TreeStore->new(
   'Glib::Int',
   'Glib::String',
  );
  my $cmodel = KGtk3::ComboModel->new($model);

  my ($iter, $child);

  $iter = $model->append(undef);
  $model->set($iter, 0 => 1, 1 => 'Root 1');

  $iter = $model->append(undef);
  $model->set($iter, 0 => 10, 1 => 'Root 2');
  $child = $model->append($iter);
  $model->set($child, 0 => 11, 1 => 'Child 2.1');
  $child = $model->append($iter);
  $model->set($child, 0 => 23, 1 => 'Child 2.2');
  $child = $model->append($iter);
  $model->set($child, 0 => 30, 1 => 'Child 2.3');

  $iter = $model->append(undef);
  $model->set($iter, 0 => 5, 1 => 'Root 3');
  $child = $model->append($iter);
  $model->set($child, 0 => 6, 1 => 'Child 3.1');
  my $subchild = $model->append($child);
  $model->set($subchild, 0 => 16, 1 => 'Child 3.1.1');
  $child = $model->append($iter);
  $model->set($child, 0 => 7, 1 => 'Child 3.2');

  return $cmodel;
}


sub create_combo {
  my ($model) = @_;

  my $combo = Gtk3::ComboBox->new_with_model($model);

  my $column = Gtk3::CellRendererText->new();
  $combo->pack_start($column, 1);
  $combo->set_attributes($column, "text", 1);

  $combo->set_row_separator_func(sub {
    my ($model, $iter) = @_;
    return $model->get($iter, 2);
  });

  return $combo;
}


my $window = Gtk3::Window->new('toplevel');
$window->signal_connect(delete_event => sub { Gtk3::main_quit() });

my $model = create_model();
my $combo = create_combo($model);

$window->add($combo);

$window->show_all();
Gtk3::main();
